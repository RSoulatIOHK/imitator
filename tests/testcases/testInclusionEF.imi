(************************************************************
 *                      IMITATOR MODEL                      
 *
 * Toy model to test the inclusion of the constraint associated with a computed state within the already synthesized constraint (for BFS)
 *
 * Description     : Toy model to test the inclusion of the constraint associated with a computed state within the already synthesized constraint (for BFS)
 * Correctness     : reachability/liveness
 * Source          : Own work
 * Author          : Étienne André
 * Modeling        : Étienne André
 * Input by        : Étienne André
 * License         : Creative Commons Attribution-ShareAlike 4.0 International (CC BY-SA 4.0)
 *
 * Created         : 2020/09/22
 * Last modified   : 2020/09/22
 *
 * IMITATOR version: 3.0
 ************************************************************)

var

(* Clocks *)
 	x,
		: clock;

(* Discrete *)
	i,
		: discrete;

(* Parameters *)
	p,
		: parameter;



(************************************************************)
  automaton pta
(************************************************************)
synclabs: a;

loc l1: invariant True
	(* Can be taken for p \in [1, 5] *)
	when 1 <= x & x <= 5 & x = p sync a do {x := 0} goto l2;
	(* Can be taken for p = 2 *)
	when x = 2 & x = p sync a do {x := 0} goto l3;

loc l2: invariant True
	when True sync a goto l2;

loc l3: invariant x <= 1 & i <= 10
	when x = 1 & i < 10 sync a do {x := 0, i := i+1} goto l3;
	when x = 1 & i = 10 sync a do {x := 0} goto l2;

end (* pta *)



(************************************************************)
(* Initial state *)
(************************************************************)

init :=
	(*------------------------------------------------------------*)
	(* Initial location *)
	(*------------------------------------------------------------*)
	& loc[pta] = l1

	(*------------------------------------------------------------*)
	(* Initial discrete assignments *)
	(*------------------------------------------------------------*)
	& i = 0

	(*------------------------------------------------------------*)
	(* Initial clock constraints *)
	(*------------------------------------------------------------*)
	& x = 0

	(*------------------------------------------------------------*)
	(* Parameter constraints *)
	(*------------------------------------------------------------*)
	& p >= 0
;


(************************************************************)
(* The end *)
(************************************************************)
end
