(************************************************************
 *                                IMITATOR MODEL
 *
 * Title            : Test logical operator priority
 * Description      : Test logical operator priority between OR and AND with parenthesis
 * Correctness      : False
 * Scalable         : No
 * Generated        : No
 * Categories       : Boolean, Semantic, Computing
 * Source           : 
 * bibkey           : 
 * Author           : Benjamin L.
 * Modeling         : Benjamin L.
 * Input by         : Benjamin L.
 * License          : Creative Commons Attribution-ShareAlike 4.0 International (CC BY-SA 4.0)
 *
 * Created          : 2021/05/11
 * Last modified    : 2021/05/31
 * Model version    : 1.0
 *
 * IMITATOR version : 3.1.0
 ************************************************************)
var 
    x,
        : clock;
    p
        : parameter;
    b1, b2
        : bool;


(************************************************************)
 automaton pta
(************************************************************)
 synclabs: a1;
 
loc l1: invariant True
    (* Thanks to or, this expression is True *)
	when (b1 = not(not(b2)) & b2 | b2) & x > 5 + p sync a1 do { } goto l2;


loc l2: invariant True
    (* Here we have parenthesis around or, so this expression is False *)
    when b1 = not(not(b2)) & (b2 | b2) & x > 5 + p sync a1 do { } goto lend;

accepting loc lend: invariant True
 end (* pta *)
(************************************************************)


(************************************************************)
(* Initial state *)
(************************************************************)

init := {

    discrete = 
        loc[pta] := l1,
        b1 := False,
        b2 := True
    ;
    continuous = 
        & True
        & x = 0
        & p >= 0
    ;
    
}


(************************************************************)
(* The end *)
(************************************************************)
end
