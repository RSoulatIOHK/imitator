(************************************************************
 *                                IMITATOR MODEL
 *
 * Title            : Complex boolean comparison
 * Description      : Test a complex boolean comparison
 * Correctness      : True
 * Scalable         : No
 * Generated        : No
 * Categories       : Boolean, Semantic, Computing
 * Source           : 
 * bibkey           : 
 * Author           : Benjamin L.
 * Modeling         : Benjamin L.
 * Input by         : Benjamin L.
 * License          : Creative Commons Attribution-ShareAlike 4.0 International (CC BY-SA 4.0)
 *
 * Created          : 2021/05/31
 * Last modified    : 2021/05/31
 * Model version    : 1.0
 *
 * IMITATOR version : 3.1.0
 ************************************************************)
var
    i = 1
        : int;
    j = 3 / 4
        : rational;
    b1, b2 
        : bool;


(************************************************************)
 automaton pta
(************************************************************)
 
loc l1: invariant (b1 | not(b1))
    when
        not(b1) & b2 do { b1 := not(b1), b2 := not(b2) }
    goto l1;
	when
	    b1 = (1 < 2 * (2 + 1) & 3 > 2)
	    & (b2 | rational_of_int(i * 3) / 4 = j)
	    & not(rational_of_int(i * 2) <= 1 + j)
	    & (True) = not(False)
     goto lend;
 
accepting loc lend: invariant True
 end (* pta *)
(************************************************************)


(************************************************************)
(* Initial state *)
(************************************************************)

init := {

    discrete = 
        loc[pta] := l1,
        b1 := False,
        b2 := True
    ;
    continuous = 
        & True
    ;
    
}


(************************************************************)
(* The end *)
(************************************************************)
end
