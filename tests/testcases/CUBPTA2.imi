(************************************************************
 *                      IMITATOR MODEL                      
 *
 * Very simple CUB-PTA to test CUB-PTA emptiness check
 *
 * Description     : Very simple CUB-PTA to test CUB-PTA emptiness check. NOTE: Exhibited a bug in LoopSynth / NZCUB as a state already met before is not necessarily a loop (it can be a state belonging to another branch of a tree).
 * Correctness     : The system has a loop for p2 >= 1 OR p1 >= 5
 * Source          : Own work
 * Author          : Étienne André
 * Modeling        : Étienne André
 * Input by        : Étienne André
 * License         : Creative Commons Attribution-ShareAlike 4.0 International (CC BY-SA 4.0)

 *
 * Created         : 2016/10/10
 * Last modified   : 2020/04/23
 *
 * IMITATOR version: 3
 ************************************************************)

var

(* Clocks *)
 	x, y
		: clock;

(* Parameters *)
	p1, p2
		: parameter;



(************************************************************)
  automaton pta
(************************************************************)
synclabs: a, b;

loc l1: invariant x <= p1
	when True sync a do {x := 0} goto l2;
	when x >= 5 sync b do {x := 0, y := 0} goto l1;

loc l2: invariant y <= p2
	when y >= 1 sync a do {x := 0 , y := 0} goto l1;

end (* pta *)



(************************************************************)
(* Initial state *)
(************************************************************)

init :=
	(*------------------------------------------------------------*)
	(* Initial location *)
	(*------------------------------------------------------------*)
	& loc[pta] = l1

	(*------------------------------------------------------------*)
	(* Initial clock constraints *)
	(*------------------------------------------------------------*)
	& x = 0
	& y = 0

	(*------------------------------------------------------------*)
	(* Parameter constraints *)
	(*------------------------------------------------------------*)
	& p1 >= 0
	& p2 >= 0
;



(************************************************************)
(* The end *)
(************************************************************)
end
