(************************************************************
 *                      IMITATOR MODEL                      
 *
 * Toy case study to test whether both the accepting keyword and the state predicate in the property are accepted for EF
 *
 * Description     : Toy case study to test whether both the `accepting` keyword and the state predicate in the property are accepted for EF
 * Correctness     : l2 (because of keyword `accepting`) and l4 (because of the property) are reachable
 * Source          : Own work
 * Author          : Étienne André
 * Modeling        : Étienne André
 * Input by        : Étienne André
 * License         : Creative Commons Attribution-ShareAlike 4.0 International (CC BY-SA 4.0)
 *
 * Created         : 2020/09/10
 * Last modified   : 2020/09/10
 *
 * IMITATOR version: 3.0
 ************************************************************)

var

(* Clocks *)
 	x,
		: clock;

(* Parameters *)
	p,
		: parameter;



(************************************************************)
  automaton pta
(************************************************************)
synclabs: a;

loc l1: invariant True
	(* p = 2 *)
	when x = 2 & p = x sync a do {x := 0} goto l2;
	
	(* p = 3 *)
	when x = 3 & p = x sync a do {x := 0} goto l3;
	
	(* p = 4 *)
	when x = 4 & p = x sync a do {x := 0} goto l4;

accepting loc l2: invariant True
	when True sync a goto l2;

loc l3: invariant True
	when True sync a goto l3;

loc l4: invariant True
	when True sync a goto l4;

end (* pta *)



(************************************************************)
(* Initial state *)
(************************************************************)

init :=
	(*------------------------------------------------------------*)
	(* Initial location *)
	(*------------------------------------------------------------*)
	& loc[pta] = l1

	(*------------------------------------------------------------*)
	(* Initial clock constraints *)
	(*------------------------------------------------------------*)
	& x = 0

	(*------------------------------------------------------------*)
	(* Parameter constraints *)
	(*------------------------------------------------------------*)
	& p >= 0
;


(************************************************************)
(* The end *)
(************************************************************)
end
