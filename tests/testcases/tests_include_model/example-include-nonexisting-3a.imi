(************************************************************
 *                      IMITATOR MODEL
 *
 * Play with #include
 *
 * Description     : TODO
 * Correctness     : TODO
 * Source          : TODO
 * Author          : Étienne André
 * Modeling        : Étienne André
 * Input by        : Étienne André
 * License         : Creative Commons Attribution-ShareAlike 4.0 International (CC BY-SA 4.0)
 *
 * Created         : 2019/04/25
 * Fork from       : example-include-1a.imi
 * Fork date       : 2021/07/19
 * Last modified   : 2021/07/19
 *
 * IMITATOR version: 3.1
 ************************************************************)

var

(* Clocks *)
 	x,
		: clock;

(* Discrete *)
	i,
		: discrete;

(* Parameters *)
	p,
		: parameter;



(************************************************************)
  automaton pta1
(************************************************************)
synclabs: a;

loc l1: invariant True
	when x = 1 sync a do {x := 0} goto l1;

end (* pta *)

#include "example-include-nonexisting-3b.imi";


(************************************************************)
(* Initial state *)
(************************************************************)

init :=
	(*------------------------------------------------------------*)
	(* Initial location *)
	(*------------------------------------------------------------*)
	& loc[pta1] = l1
	& loc[pta2] = l1

	(*------------------------------------------------------------*)
	(* Initial discrete assignments *)
	(*------------------------------------------------------------*)
	& i = 0

	(*------------------------------------------------------------*)
	(* Initial clock constraints *)
	(*------------------------------------------------------------*)
	& x = 0

	(*------------------------------------------------------------*)
	(* Parameter constraints *)
	(*------------------------------------------------------------*)
	& p >= 0
;



(************************************************************)
(* The end *)
(************************************************************)
end
