(************************************************************
 *                      IMITATOR MODEL                      
 *
 * Very basic model to test EFmin
 *
 * Description     : Very basic model to test EFmin
 * Correctness     : lbad unreachable
 * Source          : own work
 * Author          : Étienne André
 * Modeling        : Étienne André
 * Input by        : Étienne André
 * License         : Creative Commons Attribution-ShareAlike 4.0 International (CC BY-SA 4.0)
 *
 * Created         : 2017/05/03
 * Last modified   : 2020/03/20
 *
 * IMITATOR version: 3
 ************************************************************)

var

(* Clocks *)
 	x
		: clock;

(* Discrete *)
	i
		: discrete;

(* Parameters *)
	p
		: parameter;



(************************************************************)
  automaton pta
(************************************************************)
synclabs: a;

loc l1: invariant True
	when i <= 10 sync a do {x := 0, i := i + 1} goto l1;
	when x = i & x = p sync a goto lbad;

loc lbad: invariant True

end (* pta *)



(************************************************************)
(* Initial state *)
(************************************************************)

init :=
	(*------------------------------------------------------------*)
	(* Initial location *)
	(*------------------------------------------------------------*)
	& loc[pta] = l1

	(*------------------------------------------------------------*)
	(* Initial discrete assignments *)
	(*------------------------------------------------------------*)
	& i = 2

	(*------------------------------------------------------------*)
	(* Initial clock constraints *)
	(*------------------------------------------------------------*)
	& x = 0

	(*------------------------------------------------------------*)
	(* Parameter constraints *)
	(*------------------------------------------------------------*)
	& p >= 0
;


(************************************************************)
(* The end *)
(************************************************************)
end
