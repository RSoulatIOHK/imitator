(************************************************************
 *                      IMITATOR MODEL                      
 *
 * Testing Laure Petrucci's NDFS algorithm
 *
 * Description     : Toy case study to test Laure Petrucci's NDFS algorithm
 * Correctness     : Accepting cycle
 * Source          : Own work
 * Author          : Étienne André
 * Modeling        : Étienne André
 * Input by        : Étienne André
 * License         : Creative Commons Attribution-ShareAlike 4.0 International (CC BY-SA 4.0)
 *
 * Created         : 2019/07/22
 * Last modified   : 2020/04/01
 *
 * IMITATOR version: 3
 ************************************************************)

var

(* Clocks *)
 	x,
		: clock;

(* Parameters *)
	p,
		: parameter;



(************************************************************)
  automaton pta
(************************************************************)
synclabs: a;

loc l1: invariant True
	when x < 1 sync a do {x := 0} goto l1;
	when x = 1 & x = p sync a do {x := 0} goto l2;
	when x = 2 & x = p sync a do {x := 5} goto l3;
	when x = 4 & x = p sync a do {x := 0} goto l4;

accepting loc l2: invariant True
	when x = 1 goto l2;

accepting loc l3: invariant True
	when x > 0 goto l3;

accepting urgent loc l4: invariant True
	when x = 0 goto l2;
	when x = 0 goto l3;

end (* pta *)



(************************************************************)
(* Initial state *)
(************************************************************)

init :=
	(*------------------------------------------------------------*)
	(* Initial location *)
	(*------------------------------------------------------------*)
	& loc[pta] = l1

	(*------------------------------------------------------------*)
	(* Initial clock constraints *)
	(*------------------------------------------------------------*)
	& x = 0

	(*------------------------------------------------------------*)
	(* Parameter constraints *)
	(*------------------------------------------------------------*)
	& p >= 0
;


(************************************************************)
(* The end *)
(************************************************************)
end
